version: '3.7'

services:
  fusion-config:
    image: fusion/fusion-config:0.0.1-SNAPSHOT
    ports:
      - "8071:8071"
    environment:
      - spring.profiles.active=git
      - encrypt.key=${ENCRYPT_KEY}
    networks:
      - backend

  fusion-discovery:
    image: fusion/fusion-discovery:0.0.1-SNAPSHOT
    ports:
      - "8070:8070"
    depends_on:
      - fusion-config
    environment:
      - spring.profiles.active=dev
      - spring.config.import=configserver:http://fusion-config:8071
      - encrypt.key=${ENCRYPT_KEY}
    networks:
      - backend

  fusion-zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - 2181:2181
    networks:
      backend:
        aliases:
          - "zookeeper"

  fusion-kafka:
    image: wurstmeister/kafka:latest
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - fusion-zookeeper
    networks:
      backend:
        aliases:
          - "kafka"

  fusion-gateway:
    image: fusion/fusion-gateway:0.0.1-SNAPSHOT
    ports:
      - "8072:8072"
    environment:
      - spring.config.import=configserver:http://fusion-config:8071
      - encrypt.key=${ENCRYPT_KEY}
      - eureka.client.serviceUrl.defaultZone=http://netflix:eureka@fusion-discovery:8070/eureka

  fusion-web:
    image: fusion/fusionweb:0.0.1-SNAPSHOT
    ports:
      - "8081:8081"
    environment:
      - spring.profiles.active=qa
      - spring.config.import=configserver:http://fusion-config:8071
      - encrypt.key=${ENCRYPT_KEY}
      - spring.datasource.url=jdbc:mysql://host.docker.internal:3308/fusion_db?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
      - eureka.client.serviceUrl.defaultZone=http://netflix:eureka@fusion-discovery:8070/eureka

  fusion-banking:
    image: fusion/fusion-banking:0.0.1-SNAPSHOT
    ports:
      - "8082:8082"
    volumes:
      - type: bind
        source: /Users/sadatmalik/Desktop/java-projects/Fusion/certs/qwac.pfx
        target: /Users/sadatmalik/Desktop/java-projects/Fusion/certs/qwac.pfx
      - type: bind
        source: /Users/sadatmalik/Desktop/java-projects/Fusion/certs/server_pkcs8_key.der
        target: /Users/sadatmalik/Desktop/java-projects/Fusion/certs/server_pkcs8_key.der
    environment:
      - spring.profiles.active=dev
      - spring.config.import=configserver:http://fusion-config:8071
      - encrypt.key=${ENCRYPT_KEY}
      - spring.datasource.url=jdbc:mysql://host.docker.internal:3308/fusion_db?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
      - eureka.client.serviceUrl.defaultZone=http://netflix:eureka@fusion-discovery:8070/eureka

  fusion-es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: fusion-elasticsearch
    ports:
      - "9300:9300"
      - "9200:9200"
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elastic-search-data1:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      backend:
        aliases:
          - "elasticsearch"

  fusion-logstash:
    image: docker.elastic.co/logstash/logstash:7.7.0
    container_name: fusion-logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./docker/config:/etc/logstash/conf.d
    ports:
      - "5001:5001"
    networks:
      backend:
        aliases:
          - "logstash"

  fusion-kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    container_name: fusion-kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9300"
    ports:
      - 5601:5601
    networks:
      backend:
        aliases:
          - "kibana"

  fusion-zipkin:
    image: openzipkin/zipkin
    container_name: fusion-zipkin
    depends_on:
      - fusion-es
    environment:
      - "STORAGE_TYPE=elasticsearch"
      - "ES_HOSTS=elasticsearch:9300"
    ports:
      - "9411:9411"
    networks:
      backend:
        aliases:
          - "zipkin"

volumes:
  elastic-search-data1:
    driver: local

networks:
  backend:
    driver: bridge